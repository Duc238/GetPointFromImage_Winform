<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RxRRRgf/2Q==
</value>
  </data>
</root>